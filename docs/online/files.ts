export const files = {
  "input.ts": {
    "file": {
      "contents": "type createPet = {\n  method: \"PUT\";\n  url: \"{{SERVER}}/pet\";\n  resp: Resp<Pet> | Resp<Pet, \"application/xml\">;\n};\n\n// @deprecated in line\ntype deletePet = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/pet/:petId\";\n  headers: {\n    api_key: string;\n  };\n  path: {\n    petId: Pet[\"id\"];\n  };\n  resp: Reason<\"Invalid pet value\">;\n};\n\n/**\n * @deprecated in js doc\n */\ntype findPetByID = {\n  method: \"GET\";\n  url: \"{{SERVER}}/:petId\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid ID supplied\">\n    | Reason<\"Pet not Found\", 404>;\n};\n\ntype findPetByStatus = {\n  method: \"GET\";\n  url: \"{{SERVER}}/findByStatus\";\n  query: Pet[\"status\"];\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid status value\">;\n};\n\ntype findPetByTags = {\n  method: \"GET\";\n  url: \"{{SERVER}}/findByTags\";\n  query: Pet[\"tags\"];\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Invalid status value\">;\n};\n\ntype updatePet = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet\";\n  body: OmitAndRequired<Pet, \"id\", \"name\" | \"photoUrls\">;\n  resp:\n    | Resp<Pet>\n    | Resp<Pet, \"application/xml\">\n    | Reason<\"Pet not found\", 401>\n    | Reason<\"Validation expection\", 422>;\n};\n\ntype updatePetWithForm = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet/:petId\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  query: Pick<Pet, \"name\" | \"status\">;\n  resp: Reason<\"Invalid ID supplied\">;\n};\n\ntype updatePetImage = {\n  method: \"POST\";\n  url: \"{{SERVER}}/pet/:petId/uploadImage\";\n  path: {\n    petId: Pet[\"id\"];\n  };\n  /**\n   *  requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n   */\n  body: binary;\n  query: Record<string, string>;\n  resp: Resp<Pet> | Reason<\"Pet not Found\", 404>;\n};\n\ntype placeOrder = {\n  method: \"POST\";\n  url: \"{{SERVER}}/store/order\";\n  body: Order;\n  resp:\n    | Resp<Order>\n    | Reason<\"Invalid input\">\n    | Reason<\"Validation exception\", 422>;\n};\n\ntype getOrderById = {\n  method: \"GET\";\n  url: \"{{SERVER}}/store/order/:orderId\";\n  path: {\n    orderId: Order[\"id\"];\n  };\n  resp:\n    | Resp<Order>\n    | Resp<Order, \"application/xml\">\n    | Reason<\"Invalid ID supplied\">\n    | Reason<\"Order not found\", 404>;\n};\n\ntype getInventory = {\n  method: \"GET\";\n  url: \"{{SERVER}}/store/inventory\";\n  resp: Record<Pet[\"status\"], int32>;\n};\n\ntype deleteOrder = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/store/order/:orderId\";\n  path: {\n    orderId: Order[\"id\"];\n  };\n  resp: Reason<\"Invalid ID supplied\"> | Reason<\"Order not found\", 404>;\n};\n\ntype createUser = {\n  method: \"POST\";\n  url: \"{{SERVER}}/user\";\n  body: OmitAndRequired<User, \"id\", \"username\" | \"password\">;\n  resp: Resp<User> | Resp<User, \"application/xml\">;\n};\n\ntype createUserList = {\n  method: \"POST\";\n  url: \"{{SERVER}}/user/createWithList\";\n  body: OmitAndRequired<User, \"id\", \"username\" | \"password\">[];\n  resp: Resp<User[]> | Resp<User[], \"application/xml\">;\n};\n\ntype deleteUser = {\n  method: \"DELETE\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp: Reason<\"INvalid username supplied\"> | Reason<\"User not found\", 404>;\n};\n\ntype getUserByName = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp:\n    | Resp<User>\n    | Resp<User, \"application/xml\">\n    | Reason<\"INvalid username supplied\">\n    | Reason<\"User not found\", 404>;\n};\n\ntype userLogin = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/login\";\n  query: Pick<User, \"username\" | \"password\">;\n  resp:\n    | Resp<\n        string,\n        \"application/json\",\n        200,\n        {\n          \"X-Rate-Limit\": string;\n          \"X-Expires-After\": string;\n        }\n      >\n    | Resp<\n        string,\n        \"application/xml\",\n        200,\n        {\n          \"X-Rate-Limit\": string;\n          \"X-Expires-After\": string;\n        }\n      >\n    | Reason<\"Invalid username/password supplied \">;\n};\n\ntype userLogout = {\n  method: \"GET\";\n  url: \"{{SERVER}}/user/logout\";\n  resp: Resp<string>;\n};\n\ntype updateUser = {\n  method: \"PUT\";\n  url: \"{{SERVER}}/user/:username\";\n  path: {\n    username: User[\"username\"];\n  };\n  resp:\n    | Resp<string>\n    | Reason<\"INvalid username supplied\">\n    | Reason<\"User not found\", 404>;\n};\n\ntype TreeLike<T> = {\n  id: number;\n  children: TreeLike<T>[];\n};\n\ntype tryCircleRef = {\n  url: \"TEST\";\n  body: TreeLike<{ name: string }>;\n};\ntype int32 = number;\ntype int64 = number;\ntype float = number;\ntype double = number;\ntype date = string;\ntype datetime = string;\ntype password = string;\ntype binary = string;\ntype byte = string;\n\ntype OmitAndRequired<\n  T,\n  OmitedProps extends keyof T,\n  RquiredProps extends keyof T\n> = Omit<Partial<T>, OmitedProps> & Pick<T, RquiredProps>;\n\ntype OmitAndOptional<\n  T,\n  OmitedProps extends keyof T,\n  OptionalProps extends keyof T\n> = Omit<Partial<T>, OmitedProps> & Partial<Pick<T, OptionalProps>>;\n\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers\ntype BuiltInHttpHeaders =\n  | \"Accept\"\n  | \"Accept-CH\"\n  | \"Accept-Charset\"\n  | \"Accept-Encoding\"\n  | \"Accept-Language\"\n  | \"Accept-Patch\"\n  | \"Accept-Post\"\n  | \"Accept-Ranges\"\n  | \"Access-Control-Allow-Credentials\"\n  | \"Access-Control-Allow-Headers\"\n  | \"Access-Control-Allow-Methods\"\n  | \"Access-Control-Allow-Origin\"\n  | \"Access-Control-Expose-Headers\"\n  | \"Access-Control-Max-Age\"\n  | \"Access-Control-Request-Headers\"\n  | \"Access-Control-Request-Method\"\n  | \"Age\"\n  | \"Allow\"\n  | \"Alt-Svc\"\n  | \"Alt-Used\"\n  | \"Authorization\"\n  | \"Cache-Control\"\n  | \"Clear-Site-Data\"\n  | \"Connection\"\n  | \"Content-Digest\"\n  | \"Content-Disposition\"\n  | \"Content-Encoding\"\n  | \"Content-Language\"\n  | \"Content-Length\"\n  | \"Content-Location\"\n  | \"Content-Range\"\n  | \"Content-Security-Policy\"\n  | \"Content-Security-Policy-Report-Only\"\n  | \"Content-Type\"\n  | \"Cookie\"\n  | \"Cross-Origin-Embedder-Policy\"\n  | \"Cross-Origin-Opener-Policy\"\n  | \"Cross-Origin-Resource-Policy\"\n  | \"Date\"\n  | \"Device-Memory\"\n  | \"ETag\"\n  | \"Expect\"\n  | \"Expires\"\n  | \"Forwarded\"\n  | \"From\"\n  | \"Host\"\n  | \"If-Match\"\n  | \"If-Modified-Since\"\n  | \"If-None-Match\"\n  | \"If-Range\"\n  | \"If-Unmodified-Since\"\n  | \"Keep-Alive\"\n  | \"Last-Modified\"\n  | \"Link\"\n  | \"Location\"\n  | \"Max-Forwards\"\n  | \"Origin\"\n  | \"Permissions-Policy\"\n  | \"Priority\"\n  | \"Proxy-Authenticate\"\n  | \"Proxy-Authorization\"\n  | \"Range\"\n  | \"Referer\"\n  | \"Referrer-Policy\"\n  | \"Refresh\"\n  | \"Repr-Digest\"\n  | \"Retry-After\"\n  | \"Sec-Fetch-Dest\"\n  | \"Sec-Fetch-Mode\"\n  | \"Sec-Fetch-Site\"\n  | \"Sec-Fetch-User\"\n  | \"Sec-Purpose\"\n  | \"Sec-WebSocket-Accept\"\n  | \"Sec-WebSocket-Extensions\"\n  | \"Sec-WebSocket-Key\"\n  | \"Sec-WebSocket-Protocol\"\n  | \"Sec-WebSocket-Version\"\n  | \"Server\"\n  | \"Server-Timing\"\n  | \"Service-Worker-Navigation-Preload\"\n  | \"Set-Cookie\"\n  | \"SourceMap\"\n  | \"Strict-Transport-Security\"\n  | \"TE\"\n  | \"Timing-Allow-Origin\"\n  | \"Trailer\"\n  | \"Transfer-Encoding\"\n  | \"Upgrade\"\n  | \"Upgrade-Insecure-Requests\"\n  | \"User-Agent\"\n  | \"Vary\"\n  | \"Via\"\n  | \"Want-Content-Digest\"\n  | \"Want-Repr-Digest\"\n  | \"WWW-Authenticate\"\n  | \"X-Content-Type-Options\"\n  | (string & {});\n\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/MIME_types\n// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\n\ntype BuiltInContentType =\n  | \"application/json\"\n  | \"multipart/form-data\"\n  | \"text/plain\"\n  | \"application/octet-stream\"\n  | \"application/xml\"\n  | \"application/x-www-form-urlencoded\"\n  | \"application/pdf\"\n  | \"application/zip\"\n  | \"text/javascript\"\n  | \"text/css\"\n  | \"text/html\"\n  | \"image/apng\"\n  | \"image/avif\"\n  | \"image/gif\"\n  | \"image/jpeg\"\n  | \"image/png\"\n  | \"image/svg+xml\"\n  | \"image/webp\"\n  | \"audio/wave\"\n  | \"audio/wav\"\n  | \"audio/x-wav\"\n  | \"audio/x-pn-wav\"\n  | \"audio/webm\"\n  | \"audio/ogg\"\n  | \"video/webm\"\n  | \"video/ogg\"\n  | \"application/ogg\"\n  | \"multipart/byteranges\"\n  | (string & {});\n// https://editor-next.swagger.io/\ntype Status = \"placed\" | \"approved\" | \"delivered\";\n\nclass Order {\n  id: int64;\n  petId: int64;\n  quantity: int32;\n  shipDate: datetime;\n  status: Status;\n  complete: boolean;\n}\n\nclass Customer {\n  id: int64;\n  username: string;\n  address: Address;\n}\n\nclass Address {\n  street: string;\n  city: string;\n  state: string;\n  zip: number;\n}\n\nclass Category {\n  id: int64;\n  name: string;\n}\n\nclass User {\n  id: int64;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  phone: string;\n  userStatus: int32;\n}\n\nclass Tag {\n  id: int64;\n  name: string;\n}\n\nclass Pet {\n  /** Pet's id */\n  id: int64 = 0;\n  // getJsDocs() cannot see me\n  category: Category; // but getLeadingCommentRanges/getTrailingCommentRanges can do it!\n  // name with default\n  name: string = \"hi\";\n  /** photos */\n  photoUrls: string[];\n  tags: Tag[];\n  status: Status;\n}\n\n@ignore\nclass Cannot {\n  see: \"ME\";\n  caseBy: \"@ignore\";\n}\ntype Auth = {};\n\ntype PageQuery<T> = T & {\n  pageNo: number;\n  pageSize: number;\n};\n\ntype PageResp<T> = {\n  records: T[];\n  total: number;\n  pageNo?: number;\n  pageSize?: number;\n};\n\ntype Resp<\n  T,\n  ContentType extends BuiltInContentType = \"application/json\",\n  HTTPStateCode = 200,\n  Headers extends Partial<Record<BuiltInHttpHeaders, string>> = {}\n> = {\n  code: int32;\n  data: T;\n  message: string;\n};\n\ntype Reason<\n  T,\n  HTTPStateCode = 400,\n  Headers extends Partial<Record<BuiltInHttpHeaders, string>> = {}\n> = {\n  code: int32;\n  reason: string;\n};\n"
    }
  },
  "index.js": {
    "file": {
      "contents": "import express from \"express\";\nconst app = express();\nconst port = 3111;\n\nimport { parser } from \"./parser.js\";\n\nconst html = `\n<div>\n  <h2 id=\"build\">是兄弟就来点我！</h2>\n  <div id=\"output\">\n    <h1>Welcome to a TSaid! 🥳</h1>\n  </div>\n</div>\n\n<script type=\"module\">\n  import { codeToHtml } from \"https://esm.sh/shiki@1.0.0\";\n  const build = document.querySelector(\"#build\");\n  const out = document.querySelector(\"#output\");\n  build.addEventListener(\"click\", () => {\n    fetch(\"/rerun\")\n      .then((resp) => resp.json())\n      .then((resp) => {\n        codeToHtml(resp.ans, {\n          lang: \"json\",\n          theme: \"min-light\",\n        }).then((html) => {\n          out.innerHTML = html;\n        });\n      });\n  });\n  setTimeout(() => {\n    console.log(\"click 兄弟\")\n    build.click()\n  }, 500)\n\n</script>\n\n\n`;\n\napp.get(\"/\", (req, res) => {\n  res.send(html);\n});\n\napp.get(\"/rerun\", (req, res) => {\n  let ans = \"NONE\";\n  try {\n    ans = parser();\n  } catch (error) {\n    ans = error.toString();\n  }\n  res.json({ ans });\n});\n\napp.listen(port, () => {\n  console.log(`App is live at http://localhost:${port}`);\n});\n"
    }
  },
  "package-lock.json": {
    "file": {
      "contents": "{\n  \"name\": \"example-app\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"example-app\",\n      \"dependencies\": {\n        \"express\": \"^4.21.2\",\n        \"nodemon\": \"^3.1.7\",\n        \"ts-morph\": \"^24.0.0\",\n        \"typescript\": \"^5.7.2\"\n      }\n    },\n    \"node_modules/@ts-morph/common\": {\n      \"version\": \"0.25.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ts-morph/common/-/common-0.25.0.tgz\",\n      \"integrity\": \"sha512-kMnZz+vGGHi4GoHnLmMhGNjm44kGtKUXGnOvrKmMwAuvNjM/PgKVGfUnL7IDvK7Jb2QQ82jq3Zmp04Gy+r3Dkg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"minimatch\": \"^9.0.4\",\n        \"path-browserify\": \"^1.0.1\",\n        \"tinyglobby\": \"^0.2.9\"\n      }\n    },\n    \"node_modules/@ts-morph/common/node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/@ts-morph/common/node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/accepts\": {\n      \"version\": \"1.3.8\",\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-types\": \"~2.1.34\",\n        \"negotiator\": \"0.6.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/array-flatten\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/body-parser\": {\n      \"version\": \"1.20.3\",\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"content-type\": \"~1.0.5\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"on-finished\": \"2.4.1\",\n        \"qs\": \"6.13.0\",\n        \"raw-body\": \"2.5.2\",\n        \"type-is\": \"~1.6.18\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/bytes\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz\",\n      \"integrity\": \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/code-block-writer\": {\n      \"version\": \"13.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/code-block-writer/-/code-block-writer-13.0.3.tgz\",\n      \"integrity\": \"sha512-Oofo0pq3IKnsFtuHqSF7TqBfr71aeyZDVJ0HpmqB7FBM2qEigL0iPONSCZSO9pE9dZTAxANe5XHG9Uy0YMv8cg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/content-disposition\": {\n      \"version\": \"0.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safe-buffer\": \"5.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/content-type\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie\": {\n      \"version\": \"0.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/cookie-signature\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/debug\": {\n      \"version\": \"2.6.9\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"2.0.0\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/depd\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/destroy\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\",\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\n      }\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.0.tgz\",\n      \"integrity\": \"sha512-9+Sj30DIu+4KvHqMfLUGLFYL2PkURSYMVXJyXe92nFRvlYq5hBjLEhblKB+vkd/WVlUYMWigiY07T91Fkk0+4A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/ee-first\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/encodeurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escape-html\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/etag\": {\n      \"version\": \"1.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/express\": {\n      \"version\": \"4.21.2\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"accepts\": \"~1.3.8\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.20.3\",\n        \"content-disposition\": \"0.5.4\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.7.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.3.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"merge-descriptors\": \"1.0.3\",\n        \"methods\": \"~1.1.2\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.12\",\n        \"proxy-addr\": \"~2.0.7\",\n        \"qs\": \"6.13.0\",\n        \"range-parser\": \"~1.2.1\",\n        \"safe-buffer\": \"5.2.1\",\n        \"send\": \"0.19.0\",\n        \"serve-static\": \"1.16.2\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"type-is\": \"~1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"~1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/express\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/finalhandler\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"on-finished\": \"2.4.1\",\n        \"parseurl\": \"~1.3.3\",\n        \"statuses\": \"2.0.1\",\n        \"unpipe\": \"~1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/forwarded\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fresh\": {\n      \"version\": \"0.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"hasInstallScript\": true,\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.5.tgz\",\n      \"integrity\": \"sha512-Y4+pKa7XeRUPWFNvOOYHkRYrfzW07oraURSvjDmRVOJ748OrVmeXtpE4+GCEHncjCjkTxPNRt8kEbxDhsn6VTg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.0\",\n        \"dunder-proto\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/http-errors\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"depd\": \"2.0.0\",\n        \"inherits\": \"2.0.4\",\n        \"setprototypeof\": \"1.2.0\",\n        \"statuses\": \"2.0.1\",\n        \"toidentifier\": \"1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/iconv-lite\": {\n      \"version\": \"0.4.24\",\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"safer-buffer\": \">= 2.1.2 < 3\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/ignore-by-default\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/ipaddr.js\": {\n      \"version\": \"1.9.1\",\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/media-typer\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/merge-descriptors\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\n      \"license\": \"MIT\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/methods\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"mime\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/mime-db\": {\n      \"version\": \"1.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/mime-types\": {\n      \"version\": \"2.1.35\",\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"mime-db\": \"1.52.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/negotiator\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/nodemon\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-3.1.7.tgz\",\n      \"integrity\": \"sha512-hLj7fuMow6f0lbB0cD14Lz2xNjwsyruH251Pk4t/yIitCFJbmY1myuLlHm/q06aST4jg6EgAh74PIBBrRqpVAQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"chokidar\": \"^3.5.2\",\n        \"debug\": \"^4\",\n        \"ignore-by-default\": \"^1.0.1\",\n        \"minimatch\": \"^3.1.2\",\n        \"pstree.remy\": \"^1.1.8\",\n        \"semver\": \"^7.5.3\",\n        \"simple-update-notifier\": \"^2.0.0\",\n        \"supports-color\": \"^5.5.0\",\n        \"touch\": \"^3.1.0\",\n        \"undefsafe\": \"^2.0.5\"\n      },\n      \"bin\": {\n        \"nodemon\": \"bin/nodemon.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/nodemon\"\n      }\n    },\n    \"node_modules/nodemon/node_modules/debug\": {\n      \"version\": \"4.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.0.tgz\",\n      \"integrity\": \"sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/nodemon/node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.3\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz\",\n      \"integrity\": \"sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/on-finished\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ee-first\": \"1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/parseurl\": {\n      \"version\": \"1.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/path-browserify\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz\",\n      \"integrity\": \"sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/path-to-regexp\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/proxy-addr\": {\n      \"version\": \"2.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"forwarded\": \"0.2.0\",\n        \"ipaddr.js\": \"1.9.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.10\"\n      }\n    },\n    \"node_modules/pstree.remy\": {\n      \"version\": \"1.1.8\",\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/qs\": {\n      \"version\": \"6.13.0\",\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"side-channel\": \"^1.0.6\"\n      },\n      \"engines\": {\n        \"node\": \">=0.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/range-parser\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/raw-body\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"bytes\": \"3.1.2\",\n        \"http-errors\": \"2.0.0\",\n        \"iconv-lite\": \"0.4.24\",\n        \"unpipe\": \"1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"license\": \"MIT\"\n    },\n    \"node_modules/safer-buffer\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/send\": {\n      \"version\": \"0.19.0\",\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"debug\": \"2.6.9\",\n        \"depd\": \"2.0.0\",\n        \"destroy\": \"1.2.0\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~1.0.3\",\n        \"etag\": \"~1.8.1\",\n        \"fresh\": \"0.5.2\",\n        \"http-errors\": \"2.0.0\",\n        \"mime\": \"1.6.0\",\n        \"ms\": \"2.1.3\",\n        \"on-finished\": \"2.4.1\",\n        \"range-parser\": \"~1.2.1\",\n        \"statuses\": \"2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/send/node_modules/encodeurl\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/send/node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/serve-static\": {\n      \"version\": \"1.16.2\",\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"encodeurl\": \"~2.0.0\",\n        \"escape-html\": \"~1.0.3\",\n        \"parseurl\": \"~1.3.3\",\n        \"send\": \"0.19.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/setprototypeof\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\n      \"license\": \"ISC\"\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"object-inspect\": \"^1.13.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/simple-update-notifier\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz\",\n      \"integrity\": \"sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/statuses\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"5.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"has-flag\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/tinyglobby\": {\n      \"version\": \"0.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.10.tgz\",\n      \"integrity\": \"sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"fdir\": \"^6.4.2\",\n        \"picomatch\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/tinyglobby/node_modules/fdir\": {\n      \"version\": \"6.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/fdir/-/fdir-6.4.2.tgz\",\n      \"integrity\": \"sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==\",\n      \"license\": \"MIT\",\n      \"peerDependencies\": {\n        \"picomatch\": \"^3 || ^4\"\n      },\n      \"peerDependenciesMeta\": {\n        \"picomatch\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/tinyglobby/node_modules/picomatch\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz\",\n      \"integrity\": \"sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/toidentifier\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=0.6\"\n      }\n    },\n    \"node_modules/touch\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.1.tgz\",\n      \"integrity\": \"sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==\",\n      \"license\": \"ISC\",\n      \"bin\": {\n        \"nodetouch\": \"bin/nodetouch.js\"\n      }\n    },\n    \"node_modules/ts-morph\": {\n      \"version\": \"24.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/ts-morph/-/ts-morph-24.0.0.tgz\",\n      \"integrity\": \"sha512-2OAOg/Ob5yx9Et7ZX4CvTCc0UFoZHwLEJ+dpDPSUi5TgwwlTlX47w+iFRrEwzUZwYACjq83cgjS/Da50Ga37uw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@ts-morph/common\": \"~0.25.0\",\n        \"code-block-writer\": \"^13.0.3\"\n      }\n    },\n    \"node_modules/type-is\": {\n      \"version\": \"1.6.18\",\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"media-typer\": \"0.3.0\",\n        \"mime-types\": \"~2.1.24\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.6\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n      \"license\": \"Apache-2.0\",\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/undefsafe\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/unpipe\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    },\n    \"node_modules/utils-merge\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/vary\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 0.8\"\n      }\n    }\n  }\n}\n"
    }
  },
  "package.json": {
    "file": {
      "contents": "{\n  \"dependencies\": {\n    \"express\": \"^4.21.2\",\n    \"nodemon\": \"^3.1.7\",\n    \"ts-morph\": \"^24.0.0\",\n    \"typescript\": \"^5.7.2\"\n  },\n  \"name\": \"tsaid-online\",\n  \"scripts\": {\n    \"start\": \"nodemon index.js\"\n  },\n  \"type\": \"module\"\n}"
    }
  },
  "parser.js": {
    "file": {
      "contents": "import { Project } from \"ts-morph\";\nimport { getDtsNodes, parseDefinitions, parseOperations } from \"./tsaid.js\";\n\nexport const parser = () => {\n  const project = new Project({});\n  const args = [\"./input.ts\"];\n  args.forEach((glob) => {\n    project.addSourceFilesAtPaths(glob);\n  });\n  const { definitions, operations } = getDtsNodes(project);\n  const { defSchema, defNameMap } = parseDefinitions(definitions);\n  const opSchema = parseOperations(operations, defNameMap);\n  return JSON.stringify({ operations: opSchema, defs: defSchema }, null, 2);\n};\n"
    }
  },
  "tsaid.js": {
    "file": {
      "contents": "import { Node } from 'ts-morph';\n\n/**\n * 获取节点的额外信息，包括装饰器、JSDoc注释、前置注释和后置注释\n * @param node 支持的节点类型：ClassDeclaration、PropertyDeclaration、TypeAliasDeclaration、PropertySignature\n * @returns 返回解析后的节点信息对象\n */\nconst getNodeExtraInfo = (node) => {\n    var _a, _b;\n    // 获取装饰器信息，仅适用于类和类属性\n    const decorators = Node.isClassDeclaration(node) || Node.isPropertyDeclaration(node)\n        ? node.getDecorators().reduce((map, dec) => {\n            const propName = dec.getName();\n            const propValue = dec\n                .getArguments()\n                .map((arg) => arg.getFullText())\n                .join(\"/\");\n            map[propName] = propValue;\n            return map;\n        }, {})\n        : {};\n    // 获取JSDoc标签信息，注意不支持 @type\n    const jsDocs = node.getJsDocs().reduce((map, doc) => {\n        const tags = doc\n            .getTags()\n            .filter((tag) => Node.isJSDocTag(tag) || Node.isJSDocDeprecatedTag(tag))\n            .reduce((tmap, tag) => {\n            tmap[tag.getTagName()] = tag.getCommentText();\n            return tmap;\n        }, {});\n        return Object.assign(Object.assign({}, map), tags);\n    }, {});\n    // 获取前置注释，若存在则取最后一行\n    const leadingComment = (_b = (_a = node.getLeadingCommentRanges().pop()) === null || _a === void 0 ? void 0 : _a.getText()) !== null && _b !== void 0 ? _b : \"\";\n    // 获取所有后置注释并合并为一个字符串\n    const trailingComment = node\n        .getTrailingCommentRanges()\n        .map((cmm) => cmm.getText())\n        .join(\"\\n\");\n    // 优先级：JSDoc description > 装饰器 description > 前置注释 > 后置注释\n    const desc = jsDocs.description ||\n        decorators.description ||\n        leadingComment ||\n        trailingComment;\n    // 合并所有信息\n    const merged = Object.assign(Object.assign({}, jsDocs), decorators);\n    // 如果存在描述，则添加到合并对象中\n    if (desc) {\n        merged.description = desc;\n    }\n    return { decorators, jsDocs, leadingComment, trailingComment, merged };\n};\n\n// 忽略规则的键\nconst IgnoreRuleKeys = {\n    jsDoc: [\"ignore\", \"WIP\", \"Draft\"],\n    classDecorators: [\"ignore\", \"WIP\", \"Draft\"],\n    leadingComment: [\"@ignore\", \"@WIP\", \"@Draft\"],\n};\n// 判断是否应跳过该节点\nconst shouldSkip = (node) => {\n    const { decorators, jsDocs, leadingComment } = getNodeExtraInfo(node);\n    // 检查装饰器中是否有忽略标签\n    const skipByDecorator = Object.keys(decorators).findIndex((decoratorName) => IgnoreRuleKeys.classDecorators.includes(decoratorName)) > -1;\n    if (skipByDecorator)\n        return true;\n    // 检查 jsDoc 中是否有忽略标签\n    const skipByJsDoc = Object.keys(jsDocs).findIndex((tagName) => IgnoreRuleKeys.jsDoc.includes(tagName)) > -1;\n    if (skipByJsDoc)\n        return true;\n    // 检查前导注释中是否有忽略标签\n    const skipByComment = leadingComment\n        .split(/\\s+/)\n        .findIndex((word) => IgnoreRuleKeys.leadingComment.includes(word)) > -1;\n    if (skipByComment)\n        return true;\n    return false; // 如果没有任何忽略标签，返回 false\n};\n// 获取项目中的 d.ts 节点\nconst getDtsNodes = (project) => {\n    const typings = [];\n    const definitions = [];\n    const operations = [];\n    const unique = {};\n    project.getSourceFiles().forEach((sourceFile) => {\n        sourceFile.getStatements().forEach((statement) => {\n            // 处理类声明\n            if (Node.isClassDeclaration(statement)) {\n                if (shouldSkip(statement))\n                    return; // 跳过被忽略的节点\n                definitions.push(statement);\n            }\n            // 处理类型别名声明\n            if (Node.isTypeAliasDeclaration(statement)) {\n                const typ = statement.getTypeNode();\n                if (shouldSkip(statement))\n                    return; // 跳过被忽略的节点\n                // 如果是带有泛型的说明是一些辅助类型定义, 虽然暂时没有什么用, 但是先保起来\n                const typeParams = statement.getTypeParameters();\n                // 仅处理有泛型参数的类型别名\n                if (typeParams.length > 0) {\n                    typings.push(statement);\n                }\n                // 否则就看是不是 ApiOperation 定义\n                // 条件是必须是 TypeLiteral 字面量定义\n                if (Node.isTypeLiteral(typ)) {\n                    const operation = statement;\n                    // 必须有 url 字段\n                    const hasUrl = operation.getType().getProperty(\"url\");\n                    if (hasUrl) {\n                        const name = operation.getName();\n                        if (unique[name]) {\n                            throw new Error(\"Api 操作定义出现了重复\" +\n                                name +\n                                \"重复定义所在文件: \" +\n                                unique[name].getSourceFile().getFilePath() +\n                                \":\" +\n                                unique[name].getStartLineNumber() // 使用 getLine() 获取行号\n                            );\n                        }\n                        operations.push(operation);\n                        unique[name] = operation; // 记录唯一的操作\n                    }\n                }\n            }\n        });\n    });\n    return {\n        typings,\n        definitions,\n        operations,\n    };\n};\n\nconst resolveLiteral = (type) => {\n    if (type.isLiteral) {\n        return {\n            const: type.getLiteralValue(),\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst resolveType = (info) => {\n    const { type, defNameMap, extra = {}, circularRefs = new WeakMap(), } = info;\n    // 输出调试信息,帮助理解类型结构\n    // console.log(\"\\n=== Resolving Type ===\", debugType(type));\n    // 收集类型的相关信息用于调试\n    // const debug = collectDebugInfo(type, typeNode);\n    const base = Object.assign(Object.assign(Object.assign({}, extra), { _code: type.getText() }), resolveLiteral(type));\n    // 检测并处理循环引用\n    if (circularRefs.has(type)) {\n        return Object.assign(Object.assign({}, base), { $ref: circularRefs.get(type) });\n    }\n    if (type.getSymbol()) {\n        // 检查属性类型是否是已定义的类型\n        const maybeTypeDecl = type.getSymbol().getValueDeclaration();\n        const isDefinedType = defNameMap.has(maybeTypeDecl);\n        // 如果是已定义类型,使用引用\n        if (isDefinedType) {\n            return Object.assign(Object.assign({}, base), { $ref: \"#\" + defNameMap.get(maybeTypeDecl) });\n        }\n    }\n    // 处理基本类型和字面量类型\n    if (type.isString() || type.isStringLiteral()) {\n        return Object.assign(Object.assign({}, base), { type: \"string\" });\n    }\n    if (type.isNumber() || type.isNumberLiteral()) {\n        return Object.assign(Object.assign({}, base), { type: \"number\" });\n    }\n    if (type.isBoolean() || type.isBooleanLiteral()) {\n        return Object.assign(Object.assign({}, base), { type: \"boolean\" });\n    }\n    // 处理其他字面量类型\n    if (type.isLiteral()) {\n        return Object.assign(Object.assign({}, base), { type: \"string\" });\n    }\n    // 处理数组类型\n    if (type.isArray()) {\n        return Object.assign(Object.assign({}, base), { type: \"array\", items: resolveType({\n                type: type.getArrayElementType(),\n                defNameMap,\n                circularRefs,\n            }) });\n    }\n    if (type.isUnion()) {\n        circularRefs.set(type, type.getText());\n        return Object.assign(Object.assign({}, base), { oneOf: type.getUnionTypes().map((subType) => resolveType({\n                type: subType,\n                defNameMap,\n                extra,\n                circularRefs,\n            })) });\n    }\n    if (type.isIntersection()) {\n        circularRefs.set(type, type.getText());\n        return Object.assign(Object.assign({}, base), { type: \"array\", allOf: type.getIntersectionTypes().map((subType) => {\n                return resolveType({\n                    type: subType,\n                    defNameMap,\n                    extra,\n                    circularRefs,\n                });\n            }) });\n    }\n    // 处理对象类型和交叉类型\n    if (type.isObject()) {\n        circularRefs.set(type, type.getText());\n        return Object.assign(Object.assign({}, base), { type: \"object\", properties: type.getProperties().reduce((map, propSymbol) => {\n                // const debug = collectDebugInfo(null, null, propSymbol);\n                var _a, _b;\n                // 获取属性的声明节点\n                const propNode = (_a = propSymbol.getValueDeclaration()) !== null && _a !== void 0 ? _a : propSymbol.getDeclarations()[0];\n                // 获取属性的类型\n                const propType = propNode\n                    ? propSymbol.getTypeAtLocation(propNode)\n                    : propSymbol.getDeclaredType();\n                // 检查属性类型是否是已定义的类型\n                const maybeTypeDecl = (_b = propType.getSymbol()) === null || _b === void 0 ? void 0 : _b.getValueDeclaration();\n                const isDefinedType = maybeTypeDecl && defNameMap.has(maybeTypeDecl);\n                // 如果是已定义类型,使用引用\n                if (isDefinedType) {\n                    map[propSymbol.getName()] = {\n                        $ref: \"#\" + defNameMap.get(maybeTypeDecl),\n                    };\n                    return map;\n                }\n                // 递归处理属性类型\n                map[propSymbol.getName()] = resolveType({\n                    type: propType,\n                    defNameMap,\n                    circularRefs,\n                });\n                return map;\n            }, {}) });\n    }\n};\nconst parseDefinitions = (definitions) => {\n    const defSchema = {};\n    const defNameMap = new WeakMap();\n    for (const def of definitions) {\n        let clzName = def.getName();\n        // 检查是否存在重复名称\n        if (defSchema[clzName]) {\n            const atFile = def.getSourceFile().getFilePath();\n            const basechain = atFile.split(\"/\");\n            clzName =\n                clzName + \"_At_\" + basechain[basechain.length - 1].replace(/\\.w+/, \"\");\n            let acc = 0;\n            const baseName = clzName;\n            // 生成唯一名称\n            while (defSchema[clzName]) {\n                acc = acc + 1;\n                clzName = baseName + acc;\n            }\n        }\n        defNameMap.set(def, clzName);\n    }\n    for (const def of definitions) {\n        const extra = getNodeExtraInfo(def);\n        let clzName = defNameMap.get(def);\n        const schema = Object.assign(Object.assign({}, extra.merged), { type: \"object\", properties: def.getProperties().reduce((map, prop) => {\n                const extra = getNodeExtraInfo(prop);\n                map[prop.getName()] = resolveType({\n                    type: prop.getType(),\n                    defNameMap: defNameMap,\n                    extra: extra.merged,\n                });\n                return map;\n            }, {}) });\n        defSchema[clzName] = schema;\n    }\n    return { defSchema, defNameMap };\n};\nconst parseOperations = (operations, defNameMap) => {\n    const defMap = {};\n    for (const operation of operations) {\n        const extra = getNodeExtraInfo(operation);\n        const typeNode = operation.getTypeNode();\n        if (Node.isTypeLiteral(typeNode)) {\n            const schema = Object.assign(Object.assign({}, extra.merged), { type: \"object\", properties: typeNode.getProperties().reduce((map, prop) => {\n                    const extra = getNodeExtraInfo(prop);\n                    map[prop.getName()] = resolveType({\n                        type: prop.getType(),\n                        defNameMap,\n                        extra: extra.merged,\n                    });\n                    return map;\n                }, {}) });\n            defMap[operation.getName()] = schema;\n        }\n    }\n    return defMap;\n};\n\nexport { getDtsNodes, getNodeExtraInfo, parseDefinitions, parseOperations };\n"
    }
  }
}